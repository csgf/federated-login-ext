<%-- 

/**************************************************************************
Copyright (c) 2011: 
Istituto Nazionale di Fisica Nucleare (INFN), Italy
Consorzio COMETA (COMETA), Italy

See http://www.infn.it and and http://www.consorzio-cometa.it for details on the
copyright holders.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
****************************************************************************/


    Document   : init
    Created on : 21-Jul-2014, 18:28:38
    Author     : Marco Fargetta <marco.fargetta@ct.infn.it>
--%>

<%

    boolean storkAuthEnabled = PrefsPropsUtil.getBoolean(company.getCompanyId(), FedPropsKeys.STORK_AUTH_ENABLED, FedPropsValues.STORK_AUTH_ENABLED);

    String storkRegPage = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_AUTH_PAGE_MISS_USER, FedPropsValues.STORK_AUTH_PAGE_MISS_USER);
    String storkAttPage = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_AUTH_PAGE_MISS_ATTRIBUTE, FedPropsValues.STORK_AUTH_PAGE_MISS_ATTRIBUTE);
    boolean storkLdapAuthCheck = PrefsPropsUtil.getBoolean(company.getCompanyId(), FedPropsKeys.STORK_AUTH_LDLAP_CHECK, FedPropsValues.STORK_AUTH_LDLAP_CHECK);
    String storkLdapAuthSearchFilter = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_AUTH_LDAP_SEARCH_FILTER, FedPropsValues.STORK_AUTH_LDAP_SEARCH_FILTER);
    String storkLocalAuthSearchFilter = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_AUTH_LOCAL_SEARCH_FILTER, FedPropsValues.STORK_AUTH_LOCAL_SEARCH_FILTER);
    short storkSPQAA = PrefsPropsUtil.getShort(company.getCompanyId(), FedPropsKeys.STORK_SP_QAALEVEL, FedPropsValues.STORK_SP_QAALEVEL);
    String storkSPName = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_NAME, FedPropsValues.STORK_SP_NAME);
    String storkSPSector = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_SECTOR, FedPropsValues.STORK_SP_SECTOR);
    String storkSPEnvironment = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_ENVIRONMENT, FedPropsValues.STORK_SP_ENVIRONMENT);
    String storkSPApplication = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_APLICATION, FedPropsValues.STORK_SP_APLICATION);
    String storkSPCountry = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_COUNTRY, FedPropsValues.STORK_SP_COUNTRY);

    String[] strCountriesL= PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SP_COUNTRY_LIST, FedPropsValues.STORK_SP_COUNTRY_LIST).split(",");
    Country[] countryStork= new Country[strCountriesL.length];
    
    for(int iCountry=0; iCountry<countryStork.length; iCountry++){
        
        countryStork[iCountry]= new Country(strCountriesL[iCountry].trim());
    }
    
    String storkSPURL = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_SPEPS_URL, FedPropsValues.STORK_SPEPS_URL);
    boolean storkSPEuroMap = PrefsPropsUtil.getBoolean(company.getCompanyId(), FedPropsKeys.STORK_SP_EUROMAP, FedPropsValues.STORK_SP_EUROMAP);



    String storkUserMapping = PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_USER_MAPPING);
    
    String[] storkUserMappingArray = new String[0];

    String storkUserMappingScreenName = StringPool.BLANK;
    String storkUserMappingPassword = StringPool.BLANK;
    String storkUserMappingEmailAddress = StringPool.BLANK;
    String storkUserMappingFirstName = StringPool.BLANK;
    String storkUserMappingMiddleName = StringPool.BLANK;
    String storkUserMappingLastName = StringPool.BLANK;
    String storkUserMappingJobTitle = StringPool.BLANK;
    String storkUserMappingGroup = StringPool.BLANK;
    String storkUserMappingUuid = StringPool.BLANK;

    if (storkUserMapping != null) {
        storkUserMappingArray = storkUserMapping.split("\n");

        for (int i = 0; i < storkUserMappingArray.length; i++) {
            if (storkUserMappingArray[i].indexOf("=") == -1) {
                continue;
            }

            String mapping[] = storkUserMappingArray[i].split("=");

            if (mapping.length != 2) {
                continue;
            }
            if (mapping[0].equals("screenName")) {
                storkUserMappingScreenName = mapping[1];
            } else if (mapping[0].equals("password")) {
                storkUserMappingPassword = mapping[1];
            } else if (mapping[0].equals("emailAddress")) {
                storkUserMappingEmailAddress = mapping[1];
            } else if (mapping[0].equals("firstName")) {
                storkUserMappingFirstName = mapping[1];
            } else if (mapping[0].equals("middleName")) {
                storkUserMappingMiddleName = mapping[1];
            } else if (mapping[0].equals("lastName")) {
                storkUserMappingLastName = mapping[1];
            } else if (mapping[0].equals("jobTitle")) {
                storkUserMappingJobTitle = mapping[1];
            } else if (mapping[0].equals("group")) {
                storkUserMappingGroup = mapping[1];
            } else if (mapping[0].equals("uuid")) {
                storkUserMappingUuid = mapping[1];
            }

            mapping[1] = "";
        }
    }


%>

<aui:fieldset column="<%= true %>" cssClass="aui-w100">
    <aui:input label="enabled" name='<%= "settings--" + FedPropsKeys.STORK_AUTH_ENABLED + "--" %>' type="checkbox" value="<%= storkAuthEnabled %>" />

</aui:fieldset>

    
<h3><liferay-ui:message key="authentication-parameters" /></h3>

<%
    String storkMapUpdate = renderResponse.getNamespace() + "updateStork();";
%>
<aui:script>
    Liferay.provide(window, '<portlet:namespace />updateStork',
        function () {
                var storkUserMappingFields = ['screenName', 'password', 'emailAddress', 'firstName', 'middleName', 'lastName', 'jobTitle', 'group', 'uuid'];
                var storkUserMappingFieldValues = ['storkUserMappingScreenName', 'storkUserMappingPassword', 'storkUserMappingEmailAddress', 'storkUserMappingFirstName', 'storkUserMappingMiddleName', 'storkUserMappingLastName', 'storkUserMappingJobTitle', 'storkUserMappingGroup', 'storkUserMappingUuid'];
                var storkUserMappingInput = document.<portlet:namespace />fm['<portlet:namespace />settings--<%= FedPropsKeys.STORK_USER_MAPPING %>--'];

                storkUserMappingInput.value = '';

                for (var i = 0; i < storkUserMappingFields.length; i++) {
                        var storkUserMappingField = storkUserMappingFields[i];
                        var storkUserMappingValue = document.<portlet:namespace />fm['<portlet:namespace />' + storkUserMappingFieldValues[i]].value;

                        if (storkUserMappingValue) {
                                storkUserMappingInput.value += storkUserMappingFields[i] + '=' + storkUserMappingValue + '\n';
                        }
                }
        }
    );
</aui:script>
<aui:fieldset column="<%= true %>" cssClass="aui-w50">


    <aui:input cssClass="lfr-input-text-container" label="screen-name" name="storkUserMappingScreenName" type="text" value="<%= storkUserMappingScreenName%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="first-name" name="storkUserMappingFirstName" type="text" value="<%= storkUserMappingFirstName%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="middle-name" name="storkUserMappingMiddleName" type="text" value="<%= storkUserMappingMiddleName%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="group" name="storkUserMappingGroup" type="text" value="<%= storkUserMappingGroup%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="password" name="storkUserMappingPassword" type="text" value="<%= storkUserMappingPassword%>" onChange="<%= storkMapUpdate %>" />
</aui:fieldset>

<aui:fieldset column="<%= true %>" cssClass="aui-w50">
    <aui:input cssClass="lfr-input-text-container" label="email-address" name="storkUserMappingEmailAddress" type="text" value="<%= storkUserMappingEmailAddress%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="last-name" name="storkUserMappingLastName" type="text" value="<%= storkUserMappingLastName%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="job-title" name="storkUserMappingJobTitle" type="text" value="<%= storkUserMappingJobTitle%>" onChange="<%= storkMapUpdate %>" />

    <aui:input cssClass="lfr-input-text-container" label="uuid" name="storkUserMappingUuid" type="text" value="<%= storkUserMappingUuid%>" onChange="<%= storkMapUpdate %>" />

    <aui:input name='<%= "settings--" + FedPropsKeys.STORK_USER_MAPPING + "--" %>' type="hidden" value="<%= PrefsPropsUtil.getString(company.getCompanyId(), FedPropsKeys.STORK_USER_MAPPING) %>" />
    

                    
                    
</aui:fieldset>

<h3><liferay-ui:message key="service-parameters" /></h3>

<aui:fieldset column="<%= true %>" cssClass="aui-w100">
    <aui:select label="stork-qaa-level" name='<%= "settings--" + FedPropsKeys.STORK_SP_QAALEVEL + "--" %>'>
<% for(int iSel=0;iSel<9; iSel++){ %>       
        <aui:option value="<%= iSel %>" selected="<%= storkSPQAA==iSel %>"><%= iSel %></aui:option>
<% } %>
    </aui:select>
    
    <aui:input cssClass="lfr-input-text-container" label="stork-sp-name" name="<%= "settings--" + FedPropsKeys.STORK_SP_NAME + "--" %>" type="text" value="<%= storkSPName %>" />

    <aui:input cssClass="lfr-input-text-container" label="stork-sp-sector" name="<%= "settings--" + FedPropsKeys.STORK_SP_SECTOR + "--" %>" type="text" value="<%= storkSPSector %>" />

    <aui:input cssClass="lfr-input-text-container" label="stork-sp-application" name="<%= "settings--" + FedPropsKeys.STORK_SP_APLICATION + "--" %>" type="text" value="<%= storkSPApplication %>" />

    <aui:select label="stork-sp-environment" name='<%= "settings--" + FedPropsKeys.STORK_SP_ENVIRONMENT + "--" %>'>
        <aui:option value="TEST" selected="<%= storkSPEnvironment.equals("TEST") %>"><liferay-ui:message key="test"/></aui:option>
        <aui:option value="PROD" selected="<%= storkSPEnvironment.equals("PROD") %>"><liferay-ui:message key="production"/></aui:option>
    </aui:select>

    <aui:select label="stork-sp-country" name='<%= "settings--" + FedPropsKeys.STORK_SP_COUNTRY + "--" %>'>
<%
    for(Country  country: countryStork){
%>        
<aui:option value="<%= country.getName() %>" selected="<%= storkSPCountry.equals(country.getName()) %>"><%= country.getOriginalname() %></aui:option>
<%
    }
%>        
    </aui:select>

    <aui:input cssClass="lfr-input-text-container" label="stork-sp-url" name="<%= "settings--" + FedPropsKeys.STORK_SPEPS_URL + "--" %>" type="text" value="<%= storkSPURL %>" />

    <aui:input label="stork-sp-euromap" name='<%= "settings--" + FedPropsKeys.STORK_SP_EUROMAP + "--" %>' type="checkbox" value="<%= storkSPEuroMap %>"/>
    
</aui:fieldset>


<aui:fieldset column="<%= true %>" cssClass="aui-w100">

    <aui:select helpMessage="enter-the-local-map-to-identify-saml-user" label="local-search-filter" name='<%= "settings--" + FedPropsKeys.STORK_AUTH_LOCAL_SEARCH_FILTER + "--" %>'>
        <aui:option value="screenname" selected="<%= storkLocalAuthSearchFilter.equals("screenname") %>"><liferay-ui:message key="screen-name"/></aui:option>
        <aui:option value="mail" selected="<%= storkLocalAuthSearchFilter.equals("mail") %>"><liferay-ui:message key="email-address"/></aui:option>
        <aui:option value="uuid" selected="<%= storkLocalAuthSearchFilter.equals("uuid") %>"><liferay-ui:message key="uuid"/></aui:option>
    </aui:select>

    <aui:input disabled="<%= true %>" label="create-account" helpMessage="create-fed-account" name='<%= "settings--" + FedPropsKeys.STORK_USER_CREATE + "--" %>' type="checkbox" value="<%= false %>"/>
    
    <aui:input label="ldap-check" helpMessage="ldap-account-check-by-saml" name='<%= "settings--" + FedPropsKeys.STORK_AUTH_LDLAP_CHECK + "--" %>' type="checkbox" value="<%= storkLdapAuthCheck %>"/>

    <aui:input cssClass="lfr-input-text-container" helpMessage="enter-the-search-filter-to-identify-saml-user" label="ldap-search-filter" name='<%= "settings--" + FedPropsKeys.STORK_AUTH_LDAP_SEARCH_FILTER + "--" %>' type="text" value="<%= storkLdapAuthSearchFilter %>" />
</aui:fieldset>
<aui:fieldset column="<%= true %>" cssClass="aui-w100">
    <aui:input cssClass="lfr-input-text-container" label="page-no-user" name="<%= "settings--" + FedPropsKeys.STORK_AUTH_PAGE_MISS_USER + "--" %>" type="text" value="<%= storkRegPage %>" />

    <aui:input cssClass="lfr-input-text-container" label="page-no-attribute" name="<%= "settings--" + FedPropsKeys.STORK_AUTH_PAGE_MISS_ATTRIBUTE + "--" %>" type="text" value="<%= storkAttPage %>" />

</aui:fieldset>
<h3><liferay-ui:message key="stork-note" /></h3>
